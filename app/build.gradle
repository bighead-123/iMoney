apply plugin: 'com.android.application'
apply plugin: 'com.mob.sdk'

MobSDK {
    appKey "266ce6392d6fe"
    appSecret "6d4da648f3c2eef26eb682641d414c1c"
    SMSSDK {}
}

def keystoreFilepath = ''
def keystorePSW = ''
def keystoreAlias = ''
def keystoreAliasPSW = ''
// default keystore file, PLZ config file path in local.properties
def keyFile = file('s.keystore.temp')

Properties properties = new Properties()
// local.properties file in the root director
properties.load(project.rootProject.file('local.properties').newDataInputStream())
keystoreFilepath = properties.getProperty("keystore.path")

if (keystoreFilepath) {
    keystorePSW = properties.getProperty("keystore.password")
    keystoreAlias = properties.getProperty("keystore.alias")
    keystoreAliasPSW = properties.getProperty("keystore.alias_password")
    keyFile = file(keystoreFilepath)
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        flavorDimensions "versionCode"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreAlias
            keyPassword keystoreAliasPSW
            storeFile keyFile
            storePassword keystorePSW
        }
        debug {
            keyAlias keystoreAlias
            keyPassword keystoreAliasPSW
            storeFile keyFile
            storePassword keystorePSW
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    productFlavors {
        pgyer {}
        common {}
        xiaomi {}
        yingyongbao {}
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "iMoney_android_V${defaultConfig.versionName}_${releaseTime()}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies.design
    implementation rootProject.ext.dependencies.constraint_layout
    androidTestImplementation(rootProject.ext.dependencies.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation rootProject.ext.dependencies.junit
    implementation rootProject.ext.dependencies.appcompat_v4
    implementation rootProject.ext.dependencies.appcompat_v7
    implementation rootProject.ext.dependencies.banner
    implementation rootProject.ext.dependencies.butterknife
    annotationProcessor rootProject.ext.dependencies.butterknife_compiler
    implementation rootProject.ext.dependencies.picasso
    implementation rootProject.ext.dependencies.countdownview
    implementation rootProject.ext.dependencies.easypermissions
    implementation rootProject.ext.dependencies.bugly
    implementation rootProject.ext.dependencies.gson
    implementation project(':GestureLock')
    implementation project(':MPChart_library')
    implementation project(':ViewPagerIndicator_library')
    implementation project(':common')
    implementation project(':okla-library')
    debugImplementation rootProject.ext.dependencies.uetool_debug
    releaseImplementation rootProject.ext.dependencies.uetool_release
}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

/*
 * 打开Terminal输入命令:
 * 如果我们想打 pgyer 渠道的 release 版本，执行如下命令就好了：
 * ./gradlew assemblepgyerRelease
 * 如果我们想打包 pgyer 渠道的 debug 版本，执行如下命令就好了：
 * ./gradlew assemblepgyerDebug
 * 如果我们只打 pgyer 渠道版本，则：
 * ./gradlew assemblepgyer
 * 此命令会生成 pgyer 渠道的 Release 和 Debug 版本
 * 同理我想打全部渠道 Release 版本：
 * ./gradlew assembleRelease
 */