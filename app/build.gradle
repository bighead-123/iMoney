apply plugin: 'com.android.application'
apply plugin: 'com.growingio.android'
apply plugin: 'bugly'

bugly {
    // 注册时分配的 App ID
    appId = 'c84e7e9ad7'
    // 注册时分配的 App Key
    appKey = '17ec4880-a08f-4bcd-9e69-46b96e639047'
}

def keystoreFilepath = ''
def keystorePSW = ''
def keystoreAlias = ''
def keystoreAliasPSW = ''
// default keystore file, PLZ config file path in local.properties
def keyFile = file('s.keystore.temp')

Properties properties = new Properties()
// local.properties file in the root director
properties.load(project.rootProject.file('local.properties').newDataInputStream())
keystoreFilepath = properties.getProperty("keystore.path")

if (keystoreFilepath) {
    keystorePSW = properties.getProperty("keystore.password")
    keystoreAlias = properties.getProperty("keystore.alias")
    keystoreAliasPSW = properties.getProperty("keystore.alias_password")
    keyFile = file(keystoreFilepath)
}

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        flavorDimensions "versionCode"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        resValue("string", "growingio_project_id", "9addc2e4f77786ba")
        resValue("string", "growingio_url_scheme", "growing.2724aa529418df26")
        // 增加 gioenable 的配置
        resValue("string", "growingio_enable", project.gioenable)
    }

    signingConfigs {
        release {
            keyAlias keystoreAlias
            keyPassword keystoreAliasPSW
            storeFile keyFile
            storePassword keystorePSW
        }
        debug {
            keyAlias keystoreAlias
            keyPassword keystoreAliasPSW
            storeFile keyFile
            storePassword keystorePSW
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = getApkName()
                }
            }
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
        disable 'ProtectedPermissions'
        disable 'GoogleAppIndexingWarning'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies.design
    implementation rootProject.ext.dependencies.constraint_layout
    androidTestImplementation(rootProject.ext.dependencies.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation rootProject.ext.dependencies.junit
    implementation rootProject.ext.dependencies.appcompat_v4
    implementation rootProject.ext.dependencies.appcompat_v7
    implementation rootProject.ext.dependencies.banner
    implementation rootProject.ext.dependencies.butterknife
    annotationProcessor rootProject.ext.dependencies.butterknife_compiler
    implementation rootProject.ext.dependencies.picasso
    implementation rootProject.ext.dependencies.countdownview
    implementation rootProject.ext.dependencies.easypermissions
    implementation rootProject.ext.dependencies.bugly
    implementation rootProject.ext.dependencies.gson
    implementation rootProject.ext.dependencies.PgyerAppUpdate
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'me.jessyan:autosize:1.1.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.11'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation project(':GestureLock')
    implementation project(':MPChart_library')
    implementation project(':ViewPagerIndicator_library')
    implementation project(':common')
    implementation project(':okla-library')
    debugImplementation rootProject.ext.dependencies.leakcanary_android
    releaseImplementation rootProject.ext.dependencies.leakcanary_android_no_op
    debugImplementation rootProject.ext.dependencies.uetool_debug
    debugImplementation rootProject.ext.dependencies.uetool_fresco
    releaseImplementation rootProject.ext.dependencies.uetool_release
    implementation 'com.growingio.android:vds-android-agent:autotrack-2.8.2@aar'
}

def getApkFullPath() {
    return rootDir.getAbsolutePath() + "/app/build/outputs/apk/release/" + getApkName()
}

def getApkName() {
    return "iMoney_android_V${android.defaultConfig.versionName}-${releaseTime()}.apk"
}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

def readProperties(key) {
    File file = rootProject.file('local.properties')
    if (file.exists()) {
        InputStream inputStream = rootProject.file('local.properties').newDataInputStream()
        Properties properties = new Properties()
        properties.load(inputStream)

        if (properties.containsKey(key)) {
            return properties.getProperty(key)
        }
    }
}

static def getUpdateDescription() {
    return '1.代码优化;\n2.bugs fix;\n3.发布V1.4.1;'
}

task("uploadApk") {
    doLast {
        def command = "curl -F \"file=@${getApkFullPath()}\" -F \"uKey=${readProperties('pgyer.userKey')}\" -F \"_api_key=${readProperties('pgyer.apiKey')}\" -F \"buildUpdateDescription=${getUpdateDescription()}\" https://www.pgyer.com/apiv2/app/upload"
        executeCommand(command)
    }
}

uploadApk.dependsOn("assembleRelease")

task("installApk") {
    doLast {
        def command = "adb install -r ${getApkFullPath()}"
        executeCommand(command)
    }
}

task("launchApp") {
    doLast {
        def command = "adb shell am start ${android.defaultConfig.applicationId}/.MainActivity"
        executeCommand(command)
    }
}

def executeCommand(command){
    println "command:" + command

    try {
        exec {
            ExecSpec execSpec -> executable 'bash' args '-c', command
        }
        println "command execute success~"
    } catch (Exception e) {
        e.printStackTrace()
    }
}
/*
 * 打包命令：
 * ./gradlew assembleRelease
 * 打包上传 APK:
 * ./gradlew :app:uploadApk
 * 安装 APK:
 * ./gradlew :app:installApk
 * 启动 APK:
 * ./gradlew :app:launchApp
 */